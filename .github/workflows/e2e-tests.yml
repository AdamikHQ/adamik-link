name: E2E Tests

on:
  schedule:
    - cron: "0 8 * * 1" # Every Monday at 8 AM
    - cron: "0 8 * * 5" # Every Friday at 8 AM
  workflow_dispatch: # Allows manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run e2e tests
        id: run-tests
        env:
          # Adamik
          ADAMIK_API_BASE_URL: ${{ secrets.ADAMIK_API_BASE_URL }}
          ADAMIK_API_KEY: ${{ secrets.ADAMIK_API_KEY }}

          # Turnkey
          TURNKEY_API_PUBLIC_KEY: ${{ secrets.TURNKEY_API_PUBLIC_KEY }}
          TURNKEY_API_PRIVATE_KEY: ${{ secrets.TURNKEY_API_PRIVATE_KEY }}
          TURNKEY_BASE_URL: ${{ secrets.TURNKEY_BASE_URL }}
          TURNKEY_ORGANIZATION_ID: ${{ secrets.TURNKEY_ORGANIZATION_ID }}
          TURNKEY_WALLET_ID: ${{ secrets.TURNKEY_WALLET_ID }}

          # Sodot
          SODOT_VERTEX_URL_0: ${{ secrets.SODOT_VERTEX_URL_0 }}
          SODOT_VERTEX_API_KEY_0: ${{ secrets.SODOT_VERTEX_API_KEY_0 }}
          SODOT_VERTEX_URL_1: ${{ secrets.SODOT_VERTEX_URL_1 }}
          SODOT_VERTEX_API_KEY_1: ${{ secrets.SODOT_VERTEX_API_KEY_1 }}
          SODOT_VERTEX_URL_2: ${{ secrets.SODOT_VERTEX_URL_2 }}
          SODOT_VERTEX_API_KEY_2: ${{ secrets.SODOT_VERTEX_API_KEY_2 }}
          SODOT_EXISTING_ECDSA_KEY_IDS: ${{ secrets.SODOT_EXISTING_ECDSA_KEY_IDS }}
          SODOT_EXISTING_ED25519_KEY_IDS: ${{ secrets.SODOT_EXISTING_ED25519_KEY_IDS }}

          # Dfns
          DFNS_API_URL: ${{ secrets.DFNS_API_URL }}
          DFNS_CRED_ID: ${{ secrets.DFNS_CRED_ID }}
          DFNS_PRIVATE_KEY: ${{ secrets.DFNS_PRIVATE_KEY }}
          DFNS_APP_ID: ${{ secrets.DFNS_APP_ID }}
          DFNS_AUTH_TOKEN: ${{ secrets.DFNS_AUTH_TOKEN }}
        run: |
          # Run tests and capture output while preserving exit code
          pnpm run test:e2e 2>&1 | tee test-output.log
          exit ${PIPESTATUS[0]}  # Use the exit code from pnpm run test, not tee
        continue-on-error: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: |
            test-output.log
            test-reports/*.md
          retention-days: 7

      - name: Check test results
        run: |
          if [ "${{ steps.run-tests.outcome }}" == "failure" ]; then
            echo "Tests have failed"
            echo "TESTS_FAILED=true" >> $GITHUB_ENV
          else
            echo "All tests passed"
            echo "TESTS_FAILED=false" >> $GITHUB_ENV
          fi

      - name: Send Slack notification
        if: env.TESTS_FAILED == 'true' # Only run this step if tests failed
        uses: 8398a7/action-slack@v3
        with:
          status: "failure" # Always failure since we only notify on failures
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: |
            :rotating_light: *E2E TESTS FAILED!* :rotating_light:
            :github: *Repository:* ${{ github.repository }}
            :bust_in_silhouette: *Triggered by:* ${{ github.actor }}
            :github: *Branch:* ${{ github.ref_name }}

            :link: *View Run:* https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            :file_folder: *Download Results:* https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts

            :warning: Check the workflow logs for more details :mag_right:
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # Fail the workflow if tests failed
      - name: Exit with test status
        if: env.TESTS_FAILED == 'true'
        run: exit 1
